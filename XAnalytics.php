<?php
/**
 * Emit structured analytics data via an X-Analytics HTTP header.
 *
 * @see https://wikitech.wikimedia.org/wiki/X-Analytics
 * @author Ori Livneh <ori@wikimedia.org>
 * @license GPLv2
 * @version 0.1
 */

$wgExtensionCredits['other'][] = array(
	'path' => __FILE__,
	'name' => 'XAnalytics',
	'version' => '0.1',
	'url' => 'https://wikitech.wikimedia.org/wiki/X-Analytics',
	'author' => 'Ori Livneh',
	'descriptionmsg' => 'xanalytics-desc',
);

// Messages

$wgMessagesDirs['XAnalytics'] = __DIR__ . '/i18n';

// Hooks

/**
 * Set X-Analytics header before the output buffer is flushed.
 *
 * The PHP output buffer is flushed from multiple places in the MediaWiki
 * codebase (and the codebase of MediaWiki extensions), making it difficult to
 * ensure that the header is reliably injected into every response generated by
 * MediaWiki. This should be fixed. The output buffer of normal page view
 * responses is done in one place, however, so for that use-case, the code is
 * reliable.
 *
 * X-Analytics items can be declared by adding items to the configuration
 * variable $wgXAnalyticsHeaderItems.
 *
 * @see https://wikitech.wikimedia.org/wiki/X-Analytics
 */
$wgHooks['BeforePageDisplay'][] = function ( OutputPage &$out, Skin &$skin ) {
	$response = $out->getRequest()->response();
	$currentHeader = $response->getHeader( 'X-Analytics' );
	parse_str( preg_replace( '/; */', '&', $currentHeader ), $headerItems );
	wfRunHooks( 'XAnalyticsSetHeader', array( $out, &$headerItems ) );

	if ( count( $headerItems ) ) {
		$headerValue = http_build_query( $headerItems, null, ';' );
		$response->header( 'X-Analytics: ' . $headerValue, true );
	}
};
